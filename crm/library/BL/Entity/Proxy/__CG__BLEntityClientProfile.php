<?php

namespace BL\Entity\Proxy\__CG__\BL\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ClientProfile extends \BL\Entity\ClientProfile implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __get($property)
    {
        $this->__load();
        return parent::__get($property);
    }

    public function __set($property, $value)
    {
        $this->__load();
        return parent::__set($property, $value);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'greek_name', 'greek_approved_contact_person', 'greek_description', 'greek_default_renewal_fee', 'greek_default_late_fee', 'annual_advance', 'greek_founding_year', 'symbol', 'founding_address', 'founding_address_line1', 'founding_address_line2', 'founding_city', 'founding_state', 'headquarters', 'headquarters_city', 'headquarters_state', 'greek_number_of_alumni', 'greek_number_of_undergrads', 'greek_number_of_alumni_chapters', 'greek_number_of_colg_chapters', 'greek_total_ug_chapters', 'greek_grant_of_license', 'greek_royalty_description', 'greek_recommendation_to_vendor', 'profile_status_update_time', 'client_type', 'client_logo', 'client_founding_loc', 'client_founding_year', 'client_num_coll_chap', 'client_num_alum_chap', 'client_num_undergrad', 'client_num_alum', 'client_ad_image1', 'client_ad_url1', 'client_ad_image2', 'client_ad_url2', 'client_ad_image3', 'client_ad_url3', 'client_ad_image4', 'client_ad_url4', 'client_ad_image5', 'client_ad_url5', 'client_ad_image6', 'client_ad_url6', 'guid', 'org_founding_year', 'text_color', 'link_color', 'left_side_bar_color', 'greek_org_type', 'user_id');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}