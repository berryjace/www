<?php

namespace BL\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LicenseRepository extends EntityRepository {

    /**
     * Function to get ALl licenses with status to show in the admin dashboard
     * @author Mahbub
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getLicenses($params=array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $vendor_id = isset($params['vendor_id']) ? $params['vendor_id'] : false;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        $vendor_condition = (false !== $vendor_id) ? ' v.id=?1' : '';

	$newsearch = str_replace(" ","%",$searchStr); //added by softura to fix bug in search where "ink people" would not expand to "ink to the people"

        $search_clause = !empty($searchStr) ? " WHERE v.organization_name like '%$newsearch%' OR l.royalty_structure like '$searchStr%' OR l.grant_of_license like '$searchStr%' " : "";


        $search_clause.= ($search_clause == "" AND false !== $vendor_id) ? 'WHERE v.id=' . $vendor_id : '';

        $order_clause = !empty($sort_by) ? " ORDER BY $sort_by $sort_dir" : "";

        $q = $this->_em->createQuery("
            SELECT partial l.{id,status,applied_date,grant_of_license,license_agree_number,royalty_structure,default_renewal_fee,sharing,royalty_description} , 
                   partial v.{id,organization_name}, 
                   partial c.{id,organization_name, username}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c 
            $search_clause 
            $order_clause
       ");
        if ($search_clause == "" AND false !== $vendor_id) {
            $q->setParameter(1, $vendor_id);
        }
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            $paginator = new Paginator($q);
            return $paginator->count();
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            return $records;
        }
    }

    /**
     * Function to get All licensed Vendors with particular client
     * @author zea
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return string
     */
    public function getActiveVendors($client_id=null) {
        $q = $this->_em->createQuery("SELECT l, user FROM BL\Entity\License l left join l.vendor_id as user where l.client_id='" . $client_id . "' and l.status='4'");
        $results = $q->getResult();
        return $results;
    }

    /**
     * Function to get All licensed Clients with particular vendor
     * @author zea
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return string
     */
    public function getActiveClients($vendor_id=null) {
        $q = $this->_em->createQuery("SELECT l, user FROM BL\Entity\License l left join l.client_id as user where l.vendor_id='" . $vendor_id . "' and l.status='4'");
        $results = $q->getResult();
        return $results;
    }

    public function getClientLicensesSortedVendor($client_id = null){
    	$q = $this->_em->createQuery("SELECT l, client, vendor FROM BL\Entity\License l left join l.client_id as client left join l.vendor_id as vendor where l.client_id='".$client_id."' and l.status='4' ORDER BY vendor.organization_name ASC");
    	 
    	$results = $q->getResult();
    	 
    	return $results;
    }
    
    /**
     * Function to get Vendor license status with clients
     * @author Masud
     * @version 0.1
     * @copyright Blueliner Marketing
     * @access public
     * @param <array> $params
     * @param <array> $status_array
     * @return <string>
     */
    public function getVendorLicenses($params = array(), $status_array = array()) {

        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        $conditions = "WHERE users.organization_name !='' AND users.account_type=" . ACC_TYPE_CLIENT . " AND users.user_status = 'Current'";
        $search_clause = !empty($searchStr) ? " AND users.organization_name like '$searchStr%'" : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir, users.organization_name ASC" : "";

        if (trim($params['l_status']) == 'licensed') {
            $conditions .= " AND licenses.status = 4";
        } else if (trim($params['l_status']) == 'unlicensed') {
            $conditions .= " AND (licenses.status IS NULL)";
        } else if (trim($params['l_status']) == 'one_time') {
            $conditions .= " AND licenses.status = 5";
        } else if (trim($params['l_status']) == 'pending') {
            $conditions .= " AND (licenses.status = 3 OR licenses.status = 2 OR licenses.status = 1)";
        } else if (trim($params['l_status']) == 'declined') {
            $conditions .= " AND (licenses.status = 6 OR licenses.status = 7 OR licenses.status = 8)";
        }
        /**
         * We have to build the query here
         */
        $limit = "LIMIT " . $currentPage . ", " . $itemPerPage;

        $sql = "SELECT users.id as u_id, users.organization_name, users.username, 
            licenses.id as l_id, licenses.status as l_status, licenses.applied_date as l_applied_date,
            client_profiles.greek_name, licenses.grandfathered
          FROM users
          LEFT JOIN licenses ON ( users.id = licenses.client_id
          AND licenses.vendor_id = " . $params['vendor_id'] . ")
          LEFT JOIN client_profiles ON (users.id = client_profiles.user_id)
          " . $conditions . " " . $search_clause . " " . $order_clause . " " . $limit;

        $count_sql = "SELECT COUNT(*)
                FROM users
                LEFT JOIN licenses ON ( users.id = licenses.client_id
                AND licenses.vendor_id = " . $params['vendor_id'] . " )
                LEFT JOIN client_profiles ON (users.id = client_profiles.user_id) " . $conditions;

        // get Doctrine_Connection object
        $con = $this->_em->getConnection();
        // execute SQL query, receive Doctrine_Connection_Statement        
        $st = $con->executeQuery($sql);
        // fetch query result
        $records = $st->fetchAll();

        $st = $con->executeQuery($count_sql);
        $total_row = $st->fetchAll();
        $records_total = $total_row['0']['0'];
//        $status_array = $this->_helper->BUtilities->parseYAML(APPLICATION_PATH . '/configs/statuses.yml');

        $json = '{"iTotalRecords":' . $records_total . ',
         "iTotalDisplayRecords": ' . $records_total . ',
         "aaData":[';
        $first = 0;

        if ($params['iSortCol_0'] == 3) {
            $json_ul = '';
            $json_avs = '';
            $json_acs = '';
            $json_par = '';
            $json_l = '';
            $json_ot = '';
            $json_dbv = '';
            $json_dbc = '';
            $json_dba = '';
            $json_aps = '';
            $json_can = '';
            $json_non = '';
            $json_ill = '';
            $json_pot = '';

            $ul_first = $avs_first = $acs_first = $par_first = $l_first = $ot_first = $dbv_first = $dbc_first = $dba_first = $aps_first = $can_first = $non_first = $ill_first = $pot_first = 0;

            foreach ($records as $data) {

                $org_name = '';
                $l_status = '';
                $l_applied_date = '-';
                $greek_name = 'Not Defined';
                $action = '';

                /**
                 * For organization
                 */
                if ($data['organization_name'] != '') {
                    $org_name = '<a class=\"org_view\" href=\"javascript:;\" rel=\"' . $data['u_id'] . '\">' . $data['organization_name'] . '</a>';
                }

                /**
                 * For applied date
                 */
                if ($data['l_applied_date'] != '') {
                    $l_applied_date = date("m/d/y h:i a", strtotime($data['l_applied_date']));
                }

                /**
                 * For greek name
                 */
                if ($data['greek_name'] != '') {
                    $greek_name = $data['greek_name'];
                }

                /**
                 * For license status and action
                 */
                if ($data['l_status'] == '' || $data['l_status'] == NULL) {
                    if ($ul_first++) {
                        $json_ul .= ',';
                    }
                    $l_status = $status_array[0];
                    $action = '<a class=\"apply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Apply</a>';
                    $json_ul .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 1) {
                    if ($avs_first++) {
                        $json_avs .= ',';
                    }
                    $l_status = $status_array[1];
                    $action = '<a class=\"sign_link\" href=\"javascript:;\" rel=\"' . $data['l_id'] . '\">Sign</a>';
                    $json_avs .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 2) {
                    if ($acs_first++) {
                        $json_acs .= ',';
                    }
                    $l_status = $status_array[2];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\"></a>';
                    $json_acs .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 3) {
                    if ($par_first++) {
                        $json_par .= ',';
                    }
                    $l_status = $status_array[3];
                    $action = '<a class=\"view_link_fancybox\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                    $json_par .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 4) {
                    if ($l_first++) {
                        $json_l .= ',';
                    }
                    $l_status = $status_array[4];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                    
                    if ($data['grandfathered'] == 'T'){
                    	$action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">Archived</a>';
                    }
                    
                    $json_l .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 5) {
                    if ($ot_first++) {
                        $json_ot .= ',';
                    }
                    $l_status = $status_array[5];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                    $json_ot .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 6) {
                    if ($dbv_first++) {
                        $json_dbv .= ',';
                    }
                    $l_status = $status_array[6];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                    $json_dbv .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 7) {
                    if ($dbc_first++) {
                        $json_dbc .= ',';
                    }
                    $l_status = $status_array[7];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                    $json_dbc .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 8) {
                    if ($dba_first++) {
                        $json_dba .= ',';
                    }
                    $l_status = $status_array[8];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                    $json_dba .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 9){
                	if ($aps_first++){
                		$json_aps .= ',';
                	}
                	$l_status = $status_array[9];
                	$action = '<a class=\"view_link\"{ href=\"javascript:;\" rel=\"' . $data['u_id'] . '\"></a>';
                	$json_aps .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 10){
                	if ($can_first++){
                		$json_can .= ',';
                	}
                	$l_status = $status_array[10];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                	$json_can .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 11){
                	if ($non_first++){
                		$json_non .= ',';
                	}
                	$l_status = $status_array[11];
                    $action = '<a class=\"view_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\"></a>';
                	$json_non .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 12){
                	if ($ill_first++){
                		$json_ill .= ',';
                	}
                	$l_status = $status_array[12];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\"></a>';
                	$json_ill .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                } else if ($data['l_status'] == 13){
                	if ($pot_first++){
                		$json_pot .= ',';
                	}
                	$l_status = $status_array[13];
                    $action = '<a class=\"apply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">apply</a>';
                	$json_pot .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
                }
            }

            if ($params['sort_dir'] == 'desc') {
            	if ($json_pot != ''){
            		$json .= $json_pot;
            	}
            	if ($json_ill != ''){
            		if ($json_pot == ''){
            			$json .= $json_ill;
            		} else {
            			$json .= ',' . $json_ill;
            		}
            	}
            	if ($json_non != ''){
            		if ($json_pot == '' && $json_ill == ''){
            			$json .= $json_non;
            		} else {
            			$json .= ',' . $json_non;
            		}
            	}
            	if ($json_can != ''){
            		if ($json_pot == '' && $json_ill == '' && $json_non == ''){
            			$json .= $json_can;
            		} else {
            			$json .= ',' . $json_can;
            		}
            	}
            	if ($json_aps != ''){
            		if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == ''){
            			$json .= $json_aps;
            		} else {
            			$json .= ',' . $json_aps;
            		}
            	}
                if ($json_dba != '') {
                	if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == ''){
                    $json .= $json_dba;
                	} else {
                		$json .= ',' . $json_dba;
                	}
                }
                if ($json_dbc != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '') {
                        $json .= $json_dbc;
                    } else {
                        $json .= ',' . $json_dbc;
                    }
                }
                if ($json_dbv != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '') {
                        $json .= $json_dbv;
                    } else {
                        $json .= ',' . $json_dbv;
                    }
                }
                if ($json_ul != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '' && $json_dbv == '') {
                        $json .= $json_ul;
                    } else {
                        $json .= ',' . $json_ul;
                    }
                }
                if ($json_ot != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '' && $json_dbv == '' && $json_ul == '') {
                        $json .= $json_ot;
                    } else {
                        $json .= ',' . $json_ot;
                    }
                }
                if ($json_l != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '' && $json_dbv == '' && $json_ul == '' && $json_ot == '') {
                        $json .= $json_l;
                    } else {
                        $json .= ',' . $json_l;
                    }
                }
                if ($json_par != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '' && $json_dbv == '' && $json_ul == '' && $json_ot == '' && $json_l == '') {
                        $json .= $json_par;
                    } else {
                        $json .=',' . $json_par;
                    }
                }
                if ($json_acs != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '' && $json_dbv == '' && $json_ul == '' && $json_ot == '' && $json_l == '' && $json_par == '') {
                        $json .= $json_acs;
                    } else {
                        $json .= ',' . $json_acs;
                    }
                }
                if ($json_avs != '') {
                    if ($json_pot == '' && $json_ill == '' && $json_non == '' && $json_can == '' && $json_aps == '' && $json_dba == '' && $json_dbc == '' && $json_dbv == '' && $json_ul == '' && $json_ot == '' && $json_l == '' && $json_par == '' && $json_acs == '') {
                        $json .= $json_avs;
                    } else {
                        $json .= ',' . $json_avs;
                    }
                }
            } else {
                if ($json_avs != '') {
                    $json .= $json_avs;
                }
                if ($json_acs != '') {
                    if ($json_avs == '') {
                        $json .= $json_acs;
                    } else {
                        $json .= ',' . $json_acs;
                    }
                }
                if ($json_par != '') {
                    if ($json_avs == '' && $json_acs == '') {
                        $json .= $json_par;
                    } else {
                        $json .= ',' . $json_par;
                    }
                }
                if ($json_l != '') {
                    if ($json_avs == '' && $json_acs == '' && $json_par == '') {
                        $json .= $json_l;
                    } else {
                        $json .= ',' . $json_l;
                    }
                }
                if ($json_ot != '') {
                    if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '') {
                        $json .= $json_ot;
                    } else {
                        $json .= ',' . $json_ot;
                    }
                }
                if ($json_ul != '') {
                    if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '') {
                        $json .= $json_ul;
                    } else {
                        $json .= ',' . $json_ul;
                    }
                }
                if ($json_dbv != '') {
                    if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '') {
                        $json .= $json_dbv;
                    } else {
                        $json .= ',' . $json_dbv;
                    }
                }
                if ($json_dbc != '') {
                    if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '') {
                        $json .= $json_dbc;
                    } else {
                        $json .= ',' . $json_dbc;
                    }
                }
                if ($json_dba != '') {
                    if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '' && $json_dbc == '') {
                        $json .= $json_dba;
                    } else {
                        $json .= ',' . $json_dba;
                    }
                }
                if ($json_aps != ''){
                	if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '' && $json_dbc == '' && $json_dba == ''){
                		$json .= $json_aps;
                	} else {
                		$json .= ',' . $json_aps;
                	}
                }
                if ($json_can != ''){
                	if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '' && $json_dbc == '' && $json_dba == '' && $json_aps == ''){
                		$json .= $json_can;
                	} else {
                		$json .= ',' . $json_can;
                	}
                }
                if ($json_non != ''){
                	if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '' && $json_dbc == '' && $json_dba == '' && $json_aps == '' && $json_can == ''){
                		$json .= $json_non;
                	} else {
                		$json .= ',' . $json_non;
                	}
                }
                if ($json_ill != ''){
                	if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '' && $json_dbc == '' && $json_dba == '' && $json_aps == '' && $json_can == '' && $json_non == ''){
                		$json .= $json_ill;
                	} else {
                		$json .= ',' . $json_ill;
                	}
                }
                if ($json_pot != ''){
                	if ($json_avs == '' && $json_acs == '' && $json_par == '' && $json_l == '' && $json_ot == '' && $json_ul == '' && $json_dbv == '' && $json_dbc == '' && $json_dba == '' && $json_aps == '' && $json_can == '' && $json_non == '' && $json_ill == ''){
                		$json .= $json_pot;
                	} else {
                		$json .= ',' . $json_pot;
                	}
                }
            }
        } else {

            foreach ($records as $data) {
                if ($first++) {
                    $json .= ',';
                }

                $org_name = '';
                $l_status = '';
                $l_applied_date = '-';
                $greek_name = 'Not Defined';
                $action = '';

                /**
                 * For organization
                 */
                if ($data['organization_name'] != '') {
                    $org_name = '<a class=\"org_view\" href=\"javascript:;\" rel=\"' . $data['u_id'] . '\">' . $data['organization_name'] . '</a>';
                }

                /**
                 * For license status and action
                 */
                if ($data['l_status'] == '' || $data['l_status'] == NULL) {
                    $l_status = $status_array[0];
                    $action = '<a class=\"apply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Apply</a>';
                } else if ($data['l_status'] == 1) {
                    $l_status = $status_array[1];
                    $action = '<a class=\"sign_link\" href=\"javascript:;\" rel=\"' . $data['l_id'] . '\">Sign</a>';
                } else if ($data['l_status'] == 2) {
                    $l_status = $status_array[2];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                } else if ($data['l_status'] == 3) {
                    $l_status = $status_array[3];
                    $action = '<a class=\"view_link_fancybox\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                } else if ($data['l_status'] == 4) {
                    $l_status = $status_array[4];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                    if ($data['grandfathered'] == 'T'){
                    	$action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">Archived</a>';
                    }
                } else if ($data['l_status'] == 5) {
                    $l_status = $status_array[5];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">View</a>';
                } else if ($data['l_status'] == 6) {
                    $l_status = $status_array[6];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                } else if ($data['l_status'] == 7) {
                    $l_status = $status_array[7];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                } else if ($data['l_status'] == 8) {
                    $l_status = $status_array[8];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\"  rel=\"' . $data['u_id'] . '\">Re-apply</a>';
                } else if ($data['l_status'] == 9){
                	$l_status = $status_array[9];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\"></a>';
                } else if ($data['l_status'] == 10){
                	$l_status = $status_array[10];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">Re-apply</a>';
                } else if ($data['l_status'] == 11){
                	$l_status = $status_array[11];
                    $action = '<a class=\"view_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\"></a>';
                } else if ($data['l_status'] == 12){
                	$l_status = $status_array[12];
                    $action = '<a class=\"reapply_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\"></a>';
                } else if ($data['l_status'] == 13){
                	$l_status = $status_array[13];
                    $action = '<a class=\"apply_link\" href=\"javascript:;\" id=\"' . $data['u_id'] . '\" rel=\"' . $data['l_id'] . '\">Apply</a>';
                }

                /**
                 * For applied date
                 */
                if ($data['l_applied_date'] != '') {
                    $l_applied_date = date("m/d/y h:i a", strtotime($data['l_applied_date']));
                }

                /**
                 * For greek name
                 */
                if ($data['greek_name'] != '') {
                    $greek_name = $data['greek_name'];
                }

                $json .= '["' . $org_name . '","' . $greek_name . '","' . $l_applied_date . '","' . $l_status . '","' . $action . '"' . ']';
            }
        }
        $json .= ']}';

        return $json;
    }

    /**
     * Function to get client licenses
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getClientLicenses($params=array(), $status_array=array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $client_id = isset($params['client_id']) ? $params['client_id'] : false;
        $status = isset($params['status']) ? $params['status'] : false;
        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';
        $search_clause = " AND v.organization_name like '$searchStr%'";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir " : "";
        $conditions = "l.client_id = '$client_id' AND (l.status=2 OR l.status=1 OR l.status=4 OR l.status=5) AND v.user_status !='Cancelled' ";
        /**
         * We have to build the query here
         */
        $q = $this->_em->createQuery("
            SELECT partial l.{id,applied_date,status,grandfathered} , 
                   partial v.{id,organization_name}, 
                   partial c.{id,organization_name, username}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
             WHERE $conditions $search_clause $order_clause
       ");

        $q2 = $this->_em->createQuery("
            SELECT partial l.{id,applied_date,status,grandfathered} , 
                   partial v.{id,organization_name}, 
                   partial c.{id,organization_name, username}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
             WHERE $conditions $search_clause $order_clause
       ");
//        echo $q->getSQL();          
        $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage)->getResult();          
        $records_total = sizeof($q2->getResult());
        $json = '{"iTotalRecords":' . $records_total . ',
         "iTotalDisplayRecords": ' . $records_total . ',
         "aaData":';
        $prec = array();
        $top = array();
        foreach ($records as $v) {
            $action = '';
            if ($v->status == 2) {
                $action = '<a class="sign_link" href="javascript:;" id="' . $v->id . '" rel="' . $v->id . '">Sign</a>';
            } else if ($v->status == '1'){
            	$action = "";
            } else {
                $action = '<a class="view_link" href="javascript:;" id="' . $v->id . '" rel="' . $v->id . '">View</a>';
                
                if ($v->grandfathered == 'T'){
                	$action = '<a class="view_link" href="javascript:;" id="' . $v->id . '" rel="' . $v->id . '">Archived</a>';
                }
            }

            if ($v->status == '2'){
            	$top[] = array(
	                $v->vendor_id->organization_name,
	                $v->applied_date->format('m/d/Y h:i a'),
	                $status_array[$v->status],
	                $action
	            );
            } else {
	            $prec[] = array(
	                $v->vendor_id->organization_name,
	                $v->applied_date->format('m/d/Y h:i a'),
	                $status_array[$v->status],
	                $action
	            );
            }
        }
        $prec = array_merge($top, $prec);
//        print_r($prec);
        $json .= \Zend_Json::encode($prec);
        $json .= '}';
        return $json;      
    }

    /**
     * Function to get All licensed Vendors with particular client
     * @author sukhon
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return string
     */
    public function getLicensedVendors($params = array()) {

        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $status = isset($params['status']) ? $params['status'] : false;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        !empty($searchStr) ? ($search_clause[] = "v.organization_name like '$searchStr%'") : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";
        $search_clause[] = "v.id = l.vendor_id";
        //$params['status'] ? ($search_clause[] = "l.status = '$params[status]'") : "";
        $status ? ($search_clause[] = "l.status = '$status'") : "";

        $q = $this->_em->createQuery("SELECT v.id, v.organization_name, count(v) as total
                                FROM BL\Entity\License l, BL\Entity\User v 
                                " . ($search_clause ? ' WHERE ' . implode(' AND ', $search_clause) : "") .
                " group by v " . $order_clause);

        if (isset($params['show_total']) AND $params['show_total'] === true) {
            $r = $q->getResult();
            return sizeof($r);
            //return \DoctrineExtensions\Paginate\Paginate::getTotalQueryResults($q);
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            return $records;
        }
    }

    /**
     * Function to get all licensed clients with particular vendor
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getLicensedClients($params = array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $status = isset($params['status']) ? $params['status'] : false;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        !empty($searchStr) ? ($search_clause[] = "c.organization_name like '$searchStr%'") : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";
        $search_clause[] = "c.id = l.client_id";
        //$params['status'] ? ($search_clause[] = "l.status = '$params[status]'") : "";
        $status ? ($search_clause[] = "l.status = '$status'") : "";

        $q = $this->_em->createQuery("SELECT c.id, c.organization_name, count(c) as total
                                FROM BL\Entity\License l, BL\Entity\User c 
                                " . ($search_clause ? ' WHERE ' . implode(' AND ', $search_clause) : "") .
                " group by c " . $order_clause);

        if (isset($params['show_total']) AND $params['show_total'] === true) {
            $r = $q->getResult();
            return sizeof($r);
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage)->getResult(); // Step 2
            return $records;
        }
    }

    /**
     * Function to get ALl licenses with status to show in the admin dashboard
     * @author Mahbub
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getLicensesByVendor($params=array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $vendor_id = isset($params['vendor_id']) ? $params['vendor_id'] : false;
        $client_id = isset($params['client_id']) ? $params['client_id'] : false;
        $status = isset($params['status']) ? $params['status'] : false;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';
        $sort_dir = $status == '3' ? 'ASC' : $sort_dir; // pending AMC
        !empty($searchStr) ? ($search_clause[] = "v.organization_name like '$searchStr%'") : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";
        $vendor_id ? ($search_clause[] = "l.vendor_id = '$vendor_id'") : "";
        $client_id ? ($search_clause[] = "l.client_id = '$client_id'") : "";
        ($status > -1) ? ($search_clause[] = "l.status = '$status'") : "";

        /**
         * We have to build the query here
         */
        $q = $this->_em->createQuery("
            SELECT partial l.{id,applied_date,status} , 
                   partial v.{id,organization_name}, 
                   partial c.{id,organization_name, username}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
            " . (@$search_clause ? ' WHERE ' . implode(' AND ', $search_clause) : "") .
                " $order_clause
       ");
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            //return \DoctrineExtensions\Paginate\Paginate::count($q);
            $paginator = new Paginator($q);
            return $paginator->count();
            //return \DoctrineExtensions\Paginate\Paginate::getTotalQueryResults($q);
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            return $records;
        }
    }

    /**
     * Function to get licenses by clients
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getLicensesByClient($params = array()) {

        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $vendor_id = isset($params['vendor_id']) ? $params['vendor_id'] : false;
        $client_id = isset($params['client_id']) ? $params['client_id'] : false;
        $status = isset($params['status']) ? $params['status'] : false;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';
        $sort_dir = $status == '3' ? 'ASC' : $sort_dir; // pending AMC
        !empty($searchStr) ? ($search_clause[] = "c.organization_name like '$searchStr%'") : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";
        $vendor_id ? ($search_clause[] = "l.vendor_id = '$vendor_id'") : "";
        $client_id ? ($search_clause[] = "l.client_id = '$client_id'") : "";
        ($status > -1) ? ($search_clause[] = "l.status = '$status'") : "";

        /**
         * We have to build the query here
         */
        $q = $this->_em->createQuery("
            SELECT partial l.{id,applied_date,status} , 
                   partial v.{id,organization_name}, 
                   partial c.{id,organization_name, username}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
            " . (isset($search_clause) ? ' WHERE ' . implode(' AND ', $search_clause) : "") .
                " $order_clause
       ");
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            //return \DoctrineExtensions\Paginate\Paginate::count($q);
            $paginator = new Paginator($q);
            return $paginator->count();
            //return \DoctrineExtensions\Paginate\Paginate::getTotalQueryResults($q);
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage)->getResult();
            return $records;
        }
    }

    /**
     * Function to get All Clients list those are unlicensed with vendor
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return <array>
     */
    public function getUnLicensedClients($params = array()) {

        $order_clause = !empty($params['order_by']) ? "ORDER BY $params[order_by]" : "";
        $conditions = "WHERE users.organization_name !='' AND users.account_type=" . $params['account_type'] . " AND users.user_status = 'Current'";

        if (trim($params['l_status']) == '0') {
            $conditions .= " AND (licenses.status IS NULL OR licenses.status = '0')";
        }
        /**
         * We have to build the query here
         */
        $sql = "SELECT users.id as u_id, users.organization_name, licenses.id as l_id, licenses.status as l_status
          FROM users
          LEFT JOIN licenses ON ( users.id = licenses.client_id AND licenses.vendor_id = " . $params['vendor_id'] . ") " . $conditions . " " . $order_clause . " ";

        $con = $this->_em->getConnection();
        $st = $con->executeQuery($sql);
        $clients = $st->fetchAll();
        $organizations = array();
        foreach ($clients as $client) {
            $organizations[$client['u_id']] = ' ' . $client['organization_name'] . '           ';
        }

        return $organizations;
    }

    /**
     * Function to get venodrs rejected clients
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return <array>
     */
    public function getRejectedClients($params = array()) {
        $order_clause = !empty($params['order_by']) ? "ORDER BY $params[order_by]" : "";
        $conditions = "WHERE users.organization_name !='' AND users.account_type=" . $params['account_type'] . " AND users.user_status != 'Cancelled'";
        $conditions .= " AND (licenses.status = 6 OR licenses.status = 7 OR licenses.status = 8)";

        /**
         * We have to build the query here
         */
        $sql = "SELECT users.id as u_id, users.organization_name, licenses.id as l_id, licenses.status as l_status
          FROM users
          LEFT JOIN licenses ON ( users.id = licenses.client_id AND licenses.vendor_id = " . $params['vendor_id'] . ") " . $conditions . " " . $order_clause . " ";

        $con = $this->_em->getConnection();
        $st = $con->executeQuery($sql);
        $clients = $st->fetchAll();
        $organizations = array();
        foreach ($clients as $client) {
            $organizations[$client['u_id']] = $client['organization_name'];
        }

        return $organizations;
    }

    /**
     * Function to search vendors by clients
     * @author Tanzim
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function searchVendorByLiscAgreements($search_params, $limit_fields=array()) {
        $sorting_cols = array('0' => 'v.organization_name', '1' => 'v.organization_name', '2' => 'v.created_at', '3' => 'v.user_status');
        $search_params['iSortCol_0'] = isset($search_params['iSortCol_0']) ? $search_params['iSortCol_0'] : 0;
        $params = array(
            'search' => isset($search_params['sSearch']) ? $search_params['sSearch'] : '',
            'current_page' => isset($search_params['iDisplayStart']) ? $search_params['iDisplayStart'] : 1,
            'draw_count' => isset($search_params['sEcho']) ? $search_params['sEcho'] : "",
            'per_page' => isset($search_params['iDisplayLength']) ? $search_params['iDisplayLength'] : 10,
            'sort_key' => isset($sorting_cols[$search_params['iSortCol_0']]) ? $sorting_cols[$search_params['iSortCol_0']] : '',
            'search_op' => isset($search_params['search_op']) ? $search_params['search_op'] : 'AND',
            'sort_dir' => isset($search_params['sSortDir_0']) ? $search_params['sSortDir_0'] : 'ASC',
        );

        $field_map = array(
            "vendor_id" => "l.vendor_id",
            "vendor_name" => "v.organization_name",
            "license_num" => "l.license_agree_number",
            "client_org_name" => "c.organization_name",
            "client_status" => "l.status",
            "renewal_fee" => "l.default_renewal_fee",
            "sharing" => "l.sharing",
            "vendor_type" => "l.vendor_type",
            "quarterly_sales_royalty" => "royalty_structure",
            "advance_royalty" => "l.annual_advance",
            "royalty_description" => "l.royalty_description",
            "grant_of_lisc" => "l.grant_of_license"
        );

        $search_clause = "WHERE v.account_type=" . ACC_TYPE_VENDOR;
        foreach ($field_map as $k => $val) {
            if (isset($search_params[$k]) AND $search_params[$k] <> "") {
                $search_clause.= $params['search_op'] . " " . $val . " like '%" . $search_params[$k] . "%' ";
            }
        }

//        $search_clause.= "GROUP BY v.organization_name ";
        $status_conditions = "";
        if (isset($search_params['vendor_status']) && ($search_params['vendor_status'] != 'all' )) {
            $status = explode(',', $search_params['vendor_status']);
            $status_conditions .= " AND (";
            $count = 1;
            foreach ($status as $s) {
                $status_conditions .= " v.user_status='" . $s . "'";
                if ($count < count($status)) {
                    $status_conditions .= " OR";
                }
                $count++;
            }
            $status_conditions .=") ";
        }

        $order_clause = !empty($params['sort_key']) ? " ORDER BY " . $params['sort_key'] . " " . $params['sort_dir'] . "" : "";
        $is_limited_fields = count($limit_fields);
        $select_fields = $is_limited_fields ? implode(",", $limit_fields) : "l";
        $q = $this->_em->createQuery("
            SELECT {$select_fields} 
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
                   $search_clause
            $status_conditions
                $order_clause           
       ");

        $paginator = new Paginator($q);
        $records_total = $paginator->count();
        $records = $q->setFirstResult($params['current_page'])->setMaxResults($params['per_page'])->getResult();

        $json = '{"iTotalRecords":' . $records_total . ',
         "iTotalDisplayRecords": ' . $records_total . ',
         "aaData":[';
        $first = 0;
        $AllRecords = array();
        if ($is_limited_fields) {
            foreach ($records as $rec) {
                if (array_search('v.id', $limit_fields)) {
                    $UserArray = array('user_first_name' => '', 'user_last_name' => '', 'user_title' => '', 'user_address' => '', 'user_city' => '', 'user_state' => '', 'user_zip' => '', 'user_phone' => '', 'user_mobile' => '', 'user_fax' => '');
                    $query = $this->_em->createQuery("SELECT 
                                                    uc.first_name AS user_first_name,
                                                    uc.last_name AS user_last_name,
                                                    uc.title AS user_title,
                                                    uc.address_line1 AS user_address,
                                                    uc.city AS user_city,
                                                    uc.state AS user_state,
                                                    uc.zipcode AS user_zip,
                                                    uc.phone AS user_phone,
                                                    uc.mobile AS user_mobile,
                                                    uc.fax AS user_fax
                                                    FROM BL\Entity\UserContact uc
                                                    WHERE uc.user_id = :id");
                    $query->setParameter('id', $rec['id']);
                    $UserContactList = $query->getResult();
                    foreach ($UserContactList as $User) {
                        foreach ($User as $key => $value) {
                            $UserArray[$key] .= (($UserArray[$key] == '') ? $value : '; ' . $value);
                        }
                    }
                    array_push($AllRecords, array_merge($rec, $UserArray));
                } else {
                    array_push($AllRecords, $rec);
                }
            }
            return $AllRecords;    // Calling from export
        }
        foreach ($records as $v) {
            if ($first++) {
                $json .= ',';
            }
            $json .= '["<a href=\"javascript:;\" class=\"vendor_link\" rel=\"m:lisc-agreements,v:' . $v->vendor_id->id . ',c:' . $v->id . '\">' . str_replace(chr(13), '', str_replace(chr(10), "", $v->vendor_id->organization_name)) . '</a>",
              "' . (($v->applied_date->format("Y") > 1970 ) ? $v->applied_date->format("M d, Y H:i A") : "N/A") . '","' . (!is_null($v->vendor_id->user_status) ? $v->vendor_id->user_status : "-") . '"]';
        }
        $json .= ']}';
        return $json;
    }

    /**
     * Function to search vendors by clients
     * @author Tanzim
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function searchVendorByClients($search_params, $limit_fields=array()) {
        $sorting_cols = array('0' => 'v.organization_name', '1' => 'v.organization_name', '2' => 'v.created_at', '3' => 'v.user_status');
        $search_params['iSortCol_0'] = isset($search_params['iSortCol_0']) ? $search_params['iSortCol_0'] : 0;
        $params = array(
            'search' => isset($search_params['sSearch']) ? $search_params['sSearch'] : '',
            'current_page' => isset($search_params['iDisplayStart']) ? $search_params['iDisplayStart'] : 1,
            'draw_count' => isset($search_params['sEcho']) ? $search_params['sEcho'] : "",
            'per_page' => isset($search_params['iDisplayLength']) ? $search_params['iDisplayLength'] : 10,
            'sort_key' => isset($sorting_cols[$search_params['iSortCol_0']]) ? $sorting_cols[$search_params['iSortCol_0']] : '',
            'search_op' => isset($search_params['search_op']) ? $search_params['search_op'] : 'AND',
            'sort_dir' => isset($search_params['sSortDir_0']) ? $search_params['sSortDir_0'] : 'ASC',
        );

        $field_map = array(
            "vendor_name" => "v.organization_name",
            "license_num" => "l.license_agree_number",
            "client_org_name" => "c.organization_name",
            "client_status" => "l.status",
            "renewal_fee" => "l.default_renewal_fee",
            "sharing" => "l.sharing"
        );

        $search_clause = "WHERE v.account_type=" . ACC_TYPE_VENDOR;
        foreach ($field_map as $k => $val) {
            if (isset($search_params[$k]) AND $search_params[$k] <> "") {
                $search_clause.= $params['search_op'] . " " . $val . " like '%" . $search_params[$k] . "%' ";
            }
        }

//     $search_clause.= "GROUP BY v.organization_name ";
        $status_conditions = "";
        if (isset($search_params['vendor_status']) && ($search_params['vendor_status'] != 'all' )) {
            $status = explode(',', $search_params['vendor_status']);
            $status_conditions .= " AND (";
            $count = 1;
            foreach ($status as $s) {
                $status_conditions .= " v.user_status='" . $s . "'";
                if ($count < count($status)) {
                    $status_conditions .= " OR";
                }
                $count++;
            }
            $status_conditions .=") ";
        }

        $order_clause = !empty($params['sort_key']) ? " ORDER BY " . $params['sort_key'] . " " . $params['sort_dir'] . "" : "";
        $is_limited_fields = count($limit_fields);
        $select_fields = $is_limited_fields ? implode(",", $limit_fields) : "l";
        $q = $this->_em->createQuery("
            SELECT {$select_fields}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
                $search_clause
                $status_conditions
                $order_clause           
       ");

        $paginator = new Paginator($q);
        $records_total = $paginator->count();
        $records = $q->setFirstResult($params['current_page'])->setMaxResults($params['per_page'])->getResult();

        $json = '{"iTotalRecords":' . $records_total . ',
         "iTotalDisplayRecords": ' . $records_total . ',
         "aaData":[';
        $first = 0;
        $AllRecords = array();
        if ($is_limited_fields) {
            foreach ($records as $rec) {
                if (array_search('v.id', $limit_fields)) {
                    $UserArray = array('user_first_name' => '', 'user_last_name' => '', 'user_title' => '', 'user_address' => '', 'user_city' => '', 'user_state' => '', 'user_zip' => '', 'user_phone' => '', 'user_mobile' => '', 'user_fax' => '');
                    $query = $this->_em->createQuery("SELECT 
                                                    uc.first_name AS user_first_name,
                                                    uc.last_name AS user_last_name,
                                                    uc.title AS user_title,
                                                    uc.address_line1 AS user_address,
                                                    uc.city AS user_city,
                                                    uc.state AS user_state,
                                                    uc.zipcode AS user_zip,
                                                    uc.phone AS user_phone,
                                                    uc.mobile AS user_mobile,
                                                    uc.fax AS user_fax
                                                    FROM BL\Entity\UserContact uc
                                                    WHERE uc.user_id = :id");
                    $query->setParameter('id', $rec['id']);
                    $UserContactList = $query->getResult();
                    foreach ($UserContactList as $User) {
                        foreach ($User as $key => $value) {
                            $UserArray[$key] .= (($UserArray[$key] == '') ? $value : '; ' . $value);
                        }
                    }
                    array_push($AllRecords, array_merge($rec, $UserArray));
                } else {
                    array_push($AllRecords, $rec);
                }
            }
            return $AllRecords;    // Calling from export
        }
        foreach ($records as $v) {
            if ($first++) {
                $json .= ',';
            }
            $json .= '["<a href=\"javascript:;\" class=\"vendor_link\" rel=\"m:clients,v:' . $v->vendor_id->id . ',c:' . $v->id . '\">' . str_replace(chr(13), '', str_replace(chr(10), "", $v->vendor_id->organization_name)) . '</a>",
              "' . (($v->applied_date->format("Y") > 1970 ) ? $v->applied_date->format("M d, Y H:i A") : "N/A") . '","' . (!is_null($v->vendor_id->user_status) ? $v->vendor_id->user_status : "-") . '"]';
        }
        $json .= ']}';
        return $json;
    }

    /**
     * Function to get vendors those are licensed with a particular client
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @param $param<array>
     * @return String
     */
    public function getClientVendors($params = array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;
        $client_id = isset($params['client_id']) ? $params['client_id'] : false;
        $status = isset($params['status']) ? $params['status'] : false;
        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';
        $search_clause = " AND v.organization_name like '$searchStr%'";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir " : "";
        $conditions = "l.client_id = '$client_id' AND (l.status=1 OR l.status=2 OR l.status=3 OR l.status=4 OR l.status=5 OR l.status=6 OR l.status=7 OR l.status=8)  AND v.user_status !='Cancelled' ";
        /**
         * We have to build the query here
         */
        $q = $this->_em->createQuery("
            SELECT partial l.{id, applied_date, status} , 
                   partial v.{id, organization_name}, 
                   partial c.{id, organization_name, username}
            FROM BL\Entity\License l
                   JOIN l.vendor_id v
                   JOIN l.client_id c
             WHERE $conditions $search_clause $order_clause
       ");
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            $paginator = new Paginator($q);
            return $paginator->count();
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            return $records;
        }
    }

    /**
     * Function to get clients those are licensed with a particular vendor
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @param int<$vendor_id>
     * @return String
     */
    public function getClientsForVendorInvoice($vendor_id) {
        $q = $this->_em->createQuery("
             SELECT partial l.{id, applied_date, status} ,                    
                    partial c. {id, organization_name, first_name}
            FROM BL\Entity\License l
                    JOIN l.client_id c
             WHERE l.vendor_id= $vendor_id AND l.status= 4 ORDER BY l.client_id ASC");
        return $q->getResult();
    }

    /**
     * Function to get royalty commission
     * @author Masud
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @param Array<$params>
     * @return String
     */
    public function getRoyaltyCommission($params=array()) {
        $q = $this->_em->createQuery("
             SELECT partial l.{id, royalty_commission, applied_date, annual_advance},
                    partial c. {id, organization_name}
            FROM BL\Entity\License l 
                JOIN l.client_id c
             WHERE l.client_id = $params[client_id] AND l.vendor_id = $params[vendor_id] AND l.status = $params[status]");
        return $q->getResult();
    }

}
