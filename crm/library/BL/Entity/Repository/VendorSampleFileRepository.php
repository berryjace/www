<?php

namespace BL\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VendorSampleFileRepository extends EntityRepository {

    /**
     * Function to get ALl Sample to show in Vendor->Profile->Web Profile Page page
     * @author Rashed
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getSample($params=array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

                
        $search_clause = !empty($searchStr) ? " WHERE s.title like '$searchStr%'" : "";

        
        if(!empty($params['vendor_id'])){
            if(!empty($search_clause)){
                $search_clause.=" and s.Vendor=".$params['vendor_id'];
            }else{
                $search_clause.=" WHERE s.Vendor=".$params['vendor_id'];
            }
        }
        
        if(!empty($params['use_for'])){
            if(!empty($search_clause)){
                $search_clause.=" and s.use_for='".$params['use_for']."'";
            }else{
                $search_clause.=" WHERE s.use_for='".$params['use_for']."'";
            }
        }

        $order_clause = !empty($sort_by) ? " ORDER BY $sort_by $sort_dir" : "";

        $q = $this->_em->createQuery("
            SELECT s
            FROM BL\Entity\VendorSampleFile s
            $search_clause
            $order_clause
       ");
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            $paginator = new Paginator($q);
            return $paginator->count();
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            return $records;
        }
    }
}
