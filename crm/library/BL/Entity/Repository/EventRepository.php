<?php

namespace BL\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * Author: Zea
 */
class EventRepository extends EntityRepository {
    /*  public function get_current_roles($user_id) {
      $q = $this->_em->createQuery("SELECT u, ur FROM BL\Entity\User u LEFT JOIN u.roles ur where u.id='" . $user_id . "'");
      return $q->getArrayResult();
      } */

    /**
     * Function to get ALl Events to show in Event index page
     * @author Zea
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function getEvents($params=array()) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        $search_clause = !empty($searchStr) ? "WHERE e.title like '$searchStr%'" : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";
        $today = "'" . date('Y-m-d') . "'";
        if ($params['targetPage'] == "upcoming") {
            $targetPage = "AND e.start_time>=" . $today;
        } elseif ($params['targetPage'] == "past") {
            $targetPage = "AND e.start_time<" . $today;
        } else {
            $targetPage = "";
        }

        /**
         * We have to build the query here
         */
        //echo $search_clause;
        $map_condition = "((e.for_user_type IN ('random', 'c_vrandom', 'v_crandom') AND e.id = eu.event_id)
            OR e.for_user_type = 'all_vendor'
            OR e.for_user_type = 'all_client'
            OR e.for_user_type = 'all')";
        $q = $this->_em->createQuery("
            SELECT e.id, e.start_time, e.title, e.location, e.for_user_type,  count( eu.id ) AS total,
            (select count(u1.id) from BL\Entity\User u1 where u1.account_type = " . ACC_TYPE_VENDOR . " and u1.user_status != 'Cancelled') as total_vendor,
            (select count(u2.id) from BL\Entity\User u2 where u2.account_type = " . ACC_TYPE_CLIENT . " and u2.user_status != 'Cancelled') as total_client
            FROM BL\Entity\Event e, BL\Entity\EventUser eu "
                . ($search_clause ? $search_clause . " AND $map_condition" : " WHERE $map_condition ")
                . "$targetPage GROUP BY e.id $order_clause
       ");

        //echo $q->getSQL();
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            return \DoctrineExtensions\Paginate\Paginate::getTotalQueryResults($q);
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            //print_r($records);
            return $records;
        }
    }

    /**
     * Function to delete event user
     * @author Zea
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function forUserType($id) {
        $q = $this->_em->createQuery("
            SELECT e.for_user_type
            FROM BL\Entity\Event e
            WHERE e.id= $id
            "
        );
        return $q->getResult();
    }

    /**
     * Function to get forusertype for Evnts
     * @author Zea
     * @copyright Blueliner Marketing
     * @version 0.1
     * @access public
     * @return String
     */
    public function deleteEventUser($eventId) {
        $q = $this->_em->createQuery("
            DELETE FROM BL\Entity\EventUser eu
            WHERE eu.event_id= $eventId
            "
        );
        $q->getResult();
    }

    /**
     * Function to get Evnets for particular vendor
     * @author Zea
     * @version 0.1
     * @copyright Blueliner Marketing
     * @access pulic
     * @param array $params
     * @return events
     */
    public function getVendorEvents($params) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        $today = date('Y-m-d');
        if ($params['page'] == 'upcoming') {
            $conditions = " WHERE e.start_time>='" . $today . "' AND((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('random', 'c_vrandom')) OR e.for_user_type in('all', 'all_vendor', 'v_crandom'))";
        } else if ($params['page'] == 'past') {
            $conditions = " WHERE e.start_time<'" . $today . "' AND((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('random', 'c_vrandom')) OR e.for_user_type in('all', 'all_vendor', 'v_crandom'))";
        } else if ($params['page'] == 'all') {
            $conditions = " WHERE ((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('random', 'c_vrandom')) OR e.for_user_type in('all', 'all_vendor', 'v_crandom'))";
        }
        $limit = " LIMIT " . $currentPage . ", " . $itemPerPage;
        $search_clause = !empty($searchStr) ? " AND e.title like '$searchStr%'" : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";

        $for_user_type = Array();
        $for_user_type[0] = 'all';
        $for_user_type[1] = 'all_vendor';
        $for_user_type [2] = 'random';
        $for_user_type [3] = 'v_crandom';
        $for_user_type [4] = 'c_vrandom';

        $q = "
            SELECT e.id, e.title, e.message, e.location, e.for_user_type, e.start_time
                 FROM events e, events_users eu
            " . $conditions . "
          " . $search_clause . " GROUP BY e.id " . $order_clause . $limit;
        $s = "
            SELECT e.id, e.title, e.message, e.location, e.for_user_type, e.start_time
                 FROM events e, events_users eu
            " . $conditions . "
          " . $search_clause . " GROUP BY e.id " . $order_clause;
        $con = $this->_em->getConnection();
        $records = $con->fetchAll($q);

        $json = '{"iTotalRecords":' . sizeof($con->fetchAll($s)) . ',
         "iTotalDisplayRecords": ' . sizeof($con->fetchAll($s)) . ',
         "aaData":';
        $prec = array();
        foreach ($records as $key => $e) {
            $link = 'vendor/event/event-Details/id/' . $e['id'];
            $prec[] = array(
                date("M d, Y h:i a", strtotime($e['start_time'])),
                $e['title'],
                $e['location'],
                '<a class="view" href="javascript:;" rel="' . $e['id'] . '" rev="' . $link . '">Details</a>'
            );
        }
        $json .= \Zend_Json::encode($prec);
        $json .= '}';
        return $json;
    }

    /**
     * Function to get Evnets for a particular client
     * @author Masud
     * @version 0.1
     * @copyright Blueliner Marketing
     * @access pulic
     * @param array $params
     * @return events
     */
    public function getClientEvents($params) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        $today = date('Y-m-d');
        if ($params['page'] == 'upcoming') {
            $conditions = " WHERE e.start_time>='" . $today . "' AND((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('random', 'v_crandom')) OR e.for_user_type in('all', 'all_client', 'c_vrandom'))";
        } else if ($params['page'] == 'past') {
            $conditions = " WHERE e.start_time<'" . $today . "' AND((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('random', 'v_crandom')) OR e.for_user_type in('all', 'all_client', 'c_vrandom'))";
        } else if ($params['page'] == 'all') {
            $conditions = " WHERE ((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('random', 'v_crandom')) OR e.for_user_type in('all', 'all_client', 'c_vrandom'))";
        }
        $limit = " LIMIT " . $currentPage . ", " . $itemPerPage;
        $search_clause = !empty($searchStr) ? " AND e.title like '$searchStr%'" : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";

        $q = "
            SELECT e.id, e.title, e.message, e.location, e.for_user_type, e.start_time
                 FROM events e, events_users eu
            " . $conditions . "
          " . $search_clause . " GROUP BY e.id " . $order_clause . $limit;
        $s = "
            SELECT e.id, e.title, e.message, e.location, e.for_user_type, e.start_time
                 FROM events e, events_users eu
            " . $conditions . "
          " . $search_clause . " GROUP BY e.id " . $order_clause;

        $con = $this->_em->getConnection();
        $records = $con->fetchAll($q);
        $json = '{"iTotalRecords":' . sizeof($con->fetchAll($s)) . ',
         "iTotalDisplayRecords": ' . sizeof($con->fetchAll($s)) . ',
         "aaData":';
        $prec = array();
        foreach ($records as $key => $e) {
            $prec[] = array(
                date("M d, Y h:i a", strtotime($e['start_time'])),
                $e['title'],
                $e['location'],
                '<a class="view" href="javascript:;" rel="' . $e['id'] . '">Details</a>'
            );
        }
        $json .= \Zend_Json::encode($prec);
        $json .= '}';
        return $json;
    }

    /**
     * Function to find the events of a particular user(vendor or client) for user calendar
     * @author Masud
     * @version 0.1
     * @copyright Blueliner Marketing
     * @access pulic
     * @param <array>
     * @return void
     */
    public function getCalendarEvents($params) {
        $today = date('Y-m-d');
        $q = "
            SELECT e.id, e.title, e.message, e.location, e.for_user_type, e.start_time
                 FROM events e, events_users eu
            WHERE e.start_time>'" . $today . "'
                AND ((eu.user_id = '$params[id]' AND e.id=eu.event_id AND e.for_user_type in('$params[user_type_3]', '$params[user_type_5]')) OR e.for_user_type in('$params[user_type_1]', '$params[user_type_2]', '$params[user_type_4]'))
                 GROUP BY e.id ORDER BY e.start_time";
        $con = $this->_em->getConnection();

        $result = $con->fetchAll($q);
        $paginator = \Zend_Paginator::factory($result);
        $paginator->setItemCountPerPage($params['per_page']);
        $paginator->setCurrentPageNumber($params['page']);
        $paginator->setPageRange($params['num_of_link']);

        return $paginator;
    }

}