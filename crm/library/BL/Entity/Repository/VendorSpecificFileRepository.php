<?php

namespace BL\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VendorSpecificFileRepository extends EntityRepository {

    public function getSamples ($params) {
        $itemPerPage = isset($params['per_page']) ? $params['per_page'] : 10;
        $currentPage = isset($params['page_start']) ? $params['page_start'] : 1;

        $searchStr = isset($params['search']) ? $params['search'] : '';
        $sort_by = isset($params['sort_key']) ? $params['sort_key'] : '';
        $sort_dir = isset($params['sort_dir']) ? $params['sort_dir'] : '';

        !empty($searchStr) ? ($search_clause[] = "v.organization_name like '$searchStr%'") : "";
        $order_clause = !empty($sort_by) ? "ORDER BY $sort_by $sort_dir" : "";
        //$params['license_id'] > 0 ? ($search_clause[] = "v.id = $params[vendor_id]") : "";
        
        $q = $this->_em->createQuery("SELECT partial s.{id,upload_date, title, file_url, file_extension},
                                            partial v.{id, organization_name}
                                FROM BL\Entity\VendorSampleFile s
                                JOIN s.Vendor v
                                ".($search_clause ? ' WHERE '.implode(' AND ', $search_clause) : ""). 
                                " $order_clause");
        
        if (isset($params['show_total']) AND $params['show_total'] === true) {
            $r = $q->getResult();
            return sizeof($r);
            //$paginator = new Paginator($q);
            //return $paginator->count();
        } else {
            $records = $q->setFirstResult($currentPage)->setMaxResults($itemPerPage); // Step 2
            return $records;
        }
    }
}
